// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`post actions fails 1`] = `
Array [
  Object {
    "type": "post/GET_POST_PENDING",
  },
  Object {
    "error": true,
    "payload": [Error: Request failed with status code 400],
    "type": "post/GET_POST_FAILURE",
  },
]
`;

exports[`post actions getPost dispatches proper actions 1`] = `
Array [
  Object {
    "type": "post/GET_POST_PENDING",
  },
  Object {
    "payload": Object {
      "config": Object {
        "adapter": [Function],
        "data": undefined,
        "headers": Object {
          "Accept": "application/json, text/plain, */*",
          "User-Agent": "axios/0.18.0",
        },
        "maxContentLength": -1,
        "method": "get",
        "timeout": 0,
        "transformRequest": Object {
          "0": [Function],
        },
        "transformResponse": Object {
          "0": [Function],
        },
        "url": "http://jsonplaceholder.typicode.com/posts/1",
        "validateStatus": [Function],
        "xsrfCookieName": "XSRF-TOKEN",
        "xsrfHeaderName": "X-XSRF-TOKEN",
      },
      "data": Object {
        "body": "world",
        "title": "hello",
      },
      "headers": Object {
        "content-type": "application/json",
      },
      "request": OverriddenClientRequest {
        "_contentLength": null,
        "_events": Object {
          "abort": [Function],
          "aborted": [Function],
          "error": [Function],
          "response": [Function],
          "socket": [Function],
          "timeout": [Function],
        },
        "_eventsCount": 6,
        "_hasBody": true,
        "_header": null,
        "_headerSent": false,
        "_last": false,
        "_maxListeners": undefined,
        "_onPendingData": [Function],
        "_redirectable": Writable {
          "_currentRequest": [Circular],
          "_currentUrl": "http://jsonplaceholder.typicode.com:80/posts/1",
          "_ended": true,
          "_ending": true,
          "_events": Object {
            "error": [Function],
            "response": [Function],
          },
          "_eventsCount": 2,
          "_maxListeners": undefined,
          "_onNativeResponse": [Function],
          "_options": Object {
            "agent": undefined,
            "auth": undefined,
            "headers": Object {
              "Accept": "application/json, text/plain, */*",
              "User-Agent": "axios/0.18.0",
            },
            "host": "jsonplaceholder.typicode.com:80",
            "hostname": "jsonplaceholder.typicode.com",
            "maxBodyLength": 10485760,
            "maxRedirects": 21,
            "method": "get",
            "nativeProtocols": Object {
              "http:": Object {
                "Agent": [Function],
                "ClientRequest": [Function],
                "IncomingMessage": [Function],
                "METHODS": Array [
                  "ACL",
                  "BIND",
                  "CHECKOUT",
                  "CONNECT",
                  "COPY",
                  "DELETE",
                  "GET",
                  "HEAD",
                  "LINK",
                  "LOCK",
                  "M-SEARCH",
                  "MERGE",
                  "MKACTIVITY",
                  "MKCALENDAR",
                  "MKCOL",
                  "MOVE",
                  "NOTIFY",
                  "OPTIONS",
                  "PATCH",
                  "POST",
                  "PROPFIND",
                  "PROPPATCH",
                  "PURGE",
                  "PUT",
                  "REBIND",
                  "REPORT",
                  "SEARCH",
                  "SOURCE",
                  "SUBSCRIBE",
                  "TRACE",
                  "UNBIND",
                  "UNLINK",
                  "UNLOCK",
                  "UNSUBSCRIBE",
                ],
                "OutgoingMessage": [Function],
                "STATUS_CODES": Object {
                  "100": "Continue",
                  "101": "Switching Protocols",
                  "102": "Processing",
                  "200": "OK",
                  "201": "Created",
                  "202": "Accepted",
                  "203": "Non-Authoritative Information",
                  "204": "No Content",
                  "205": "Reset Content",
                  "206": "Partial Content",
                  "207": "Multi-Status",
                  "208": "Already Reported",
                  "226": "IM Used",
                  "300": "Multiple Choices",
                  "301": "Moved Permanently",
                  "302": "Found",
                  "303": "See Other",
                  "304": "Not Modified",
                  "305": "Use Proxy",
                  "307": "Temporary Redirect",
                  "308": "Permanent Redirect",
                  "400": "Bad Request",
                  "401": "Unauthorized",
                  "402": "Payment Required",
                  "403": "Forbidden",
                  "404": "Not Found",
                  "405": "Method Not Allowed",
                  "406": "Not Acceptable",
                  "407": "Proxy Authentication Required",
                  "408": "Request Timeout",
                  "409": "Conflict",
                  "410": "Gone",
                  "411": "Length Required",
                  "412": "Precondition Failed",
                  "413": "Payload Too Large",
                  "414": "URI Too Long",
                  "415": "Unsupported Media Type",
                  "416": "Range Not Satisfiable",
                  "417": "Expectation Failed",
                  "418": "I'm a teapot",
                  "421": "Misdirected Request",
                  "422": "Unprocessable Entity",
                  "423": "Locked",
                  "424": "Failed Dependency",
                  "425": "Unordered Collection",
                  "426": "Upgrade Required",
                  "428": "Precondition Required",
                  "429": "Too Many Requests",
                  "431": "Request Header Fields Too Large",
                  "451": "Unavailable For Legal Reasons",
                  "500": "Internal Server Error",
                  "501": "Not Implemented",
                  "502": "Bad Gateway",
                  "503": "Service Unavailable",
                  "504": "Gateway Timeout",
                  "505": "HTTP Version Not Supported",
                  "506": "Variant Also Negotiates",
                  "507": "Insufficient Storage",
                  "508": "Loop Detected",
                  "509": "Bandwidth Limit Exceeded",
                  "510": "Not Extended",
                  "511": "Network Authentication Required",
                },
                "Server": [Function],
                "ServerResponse": [Function],
                "_connectionListener": [Function],
                "createServer": [Function],
                "get": [Function],
                "globalAgent": Agent {
                  "_events": Object {
                    "free": [Function],
                  },
                  "_eventsCount": 1,
                  "_maxListeners": undefined,
                  "defaultPort": 80,
                  "domain": null,
                  "freeSockets": Object {},
                  "keepAlive": false,
                  "keepAliveMsecs": 1000,
                  "maxFreeSockets": 256,
                  "maxSockets": Infinity,
                  "options": Object {
                    "path": null,
                  },
                  "protocol": "http:",
                  "requests": Object {},
                  "sockets": Object {},
                },
                "request": [Function],
              },
              "https:": Object {
                "Agent": [Function],
                "Server": [Function],
                "createServer": [Function],
                "get": [Function],
                "globalAgent": Agent {
                  "_events": Object {
                    "free": [Function],
                  },
                  "_eventsCount": 1,
                  "_maxListeners": undefined,
                  "_sessionCache": Object {
                    "list": Array [],
                    "map": Object {},
                  },
                  "defaultPort": 443,
                  "domain": null,
                  "freeSockets": Object {},
                  "keepAlive": false,
                  "keepAliveMsecs": 1000,
                  "maxCachedSessions": 100,
                  "maxFreeSockets": 256,
                  "maxSockets": Infinity,
                  "options": Object {
                    "path": null,
                  },
                  "protocol": "https:",
                  "requests": Object {},
                  "sockets": Object {},
                },
                "request": [Function],
              },
            },
            "path": "/posts/1",
            "pathname": "/posts/1",
            "port": 80,
            "proto": "http",
            "protocol": "http:",
          },
          "_redirectCount": 0,
          "_redirects": Array [],
          "_requestBodyBuffers": Array [],
          "_requestBodyLength": 0,
          "_writableState": WritableState {
            "bufferProcessing": false,
            "bufferedRequest": null,
            "bufferedRequestCount": 0,
            "corked": 0,
            "corkedRequestsFree": Object {
              "entry": null,
              "finish": [Function],
              "next": null,
            },
            "decodeStrings": true,
            "defaultEncoding": "utf8",
            "destroyed": false,
            "ended": false,
            "ending": false,
            "errorEmitted": false,
            "finalCalled": false,
            "finished": false,
            "highWaterMark": 16384,
            "lastBufferedRequest": null,
            "length": 0,
            "needDrain": false,
            "objectMode": false,
            "onwrite": [Function],
            "pendingcb": 0,
            "prefinished": false,
            "sync": true,
            "writecb": null,
            "writelen": 0,
            "writing": false,
          },
          "domain": null,
          "writable": true,
        },
        "_removedConnection": false,
        "_removedContLen": false,
        "_removedHeader": Object {},
        "_removedTE": false,
        "_trailer": "",
        "abort": [Function],
        "chunkedEncoding": false,
        "connection": EventEmitter {
          "_events": Object {},
          "_eventsCount": 0,
          "_maxListeners": undefined,
          "domain": null,
        },
        "domain": null,
        "end": [Function],
        "finished": false,
        "flushHeaders": [Function],
        "headers": Object {
          "accept": "application/json, text/plain, */*",
          "host": "jsonplaceholder.typicode.com",
          "user-agent": "axios/0.18.0",
        },
        "on": [Function],
        "once": [Function],
        "output": Array [],
        "outputCallbacks": Array [],
        "outputEncodings": Array [],
        "outputSize": 0,
        "path": "/posts/1",
        "sendDate": false,
        "shouldKeepAlive": true,
        "socket": Socket {
          "_events": Object {},
          "_eventsCount": 0,
          "_maxListeners": undefined,
          "authorized": true,
          "connecting": false,
          "destroyed": false,
          "domain": null,
          "readable": true,
          "resume": [Function],
          "setKeepAlive": [Function],
          "setNoDelay": [Function],
          "timeoutMs": null,
          "totalDelayMs": 0,
          "writable": true,
        },
        "upgrading": false,
        "useChunkedEncodingByDefault": true,
        "writable": true,
        "write": [Function],
        Symbol(outHeadersKey): Object {
          "accept": Array [
            "accept",
            "application/json, text/plain, */*",
          ],
          "host": Array [
            "host",
            "jsonplaceholder.typicode.com",
          ],
          "user-agent": Array [
            "user-agent",
            "axios/0.18.0",
          ],
        },
      },
      "status": 200,
      "statusText": null,
    },
    "type": "post/GET_POST_SUCCESS",
  },
]
`;
